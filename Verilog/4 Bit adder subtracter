module full_adder(a,b,Cin,sum,carry);
input a,b,Cin;
output carry,sum;
wire w1,w2,w3;
xor(sum,a,b,Cin);
and a1 (w1,a,b);
and a2 (w2,b,Cin);
and a3 (w3,a,Cin);
or o1 (carry,w1,w2,w3);
endmodule
module
four_bitAdd_sub_verilog(A1,A2,A3,A4,B1,B2,B3,B4,C,s1,s2,s3,s4,Cout);
input A1,A2,A3,A4,B1,B2,B3,B4,C;
output s1,s2,s3,s4,Cout;
wire w4,w5,w6,w7,c1,c2,c3;
xor x1 (w4,B1,C);
xor x2 (w5,B2,C);
xor x3 (w6,B3,C);
xor x4 (w7,B4,C);
full_adder f1 (A1,C,w1,s1,c1);
full_adder f2 (A2,c1,w2,s2,c2);
full_adder f3 (A3,c2,w3,s3,c3);
full_adder f4 (A4,c3,w4,s4,Cout);
endmodule 
